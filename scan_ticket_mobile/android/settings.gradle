pluginManagement {
    def flutterSdkPath = {
        def properties = new Properties()
        def propertiesFile = new File(settingsDir, "local.properties")
        if (propertiesFile.exists()) {
            properties.load(new FileInputStream(propertiesFile))
            return properties.getProperty('flutter.sdk')
        }
        return null
    }()

    includeBuild("${flutterSdkPath}/packages/flutter_tools/gradle")

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
        maven {
            url "${flutterSdkPath}/bin/cache/artifacts/engine/android-arm64"
        }
        maven {
            url "${flutterSdkPath}/bin/cache/artifacts/engine/android-x64"
        }
        maven {
            url 'https://storage.googleapis.com/download.flutter.io'
        }
    }
}

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
    repositories {
        google()
        mavenCentral()
        maven {
            url 'https://storage.googleapis.com/download.flutter.io'
        }
        def flutterSdkPath = {
            def properties = new Properties()
            def propertiesFile = new File(settingsDir, "local.properties")
            if (propertiesFile.exists()) {
                properties.load(new FileInputStream(propertiesFile))
                return properties.getProperty('flutter.sdk')
            }
            return null
        }()
        maven {
            url "${flutterSdkPath}/bin/cache/artifacts/engine/android-arm64"
        }
        maven {
            url "${flutterSdkPath}/bin/cache/artifacts/engine/android-x64"
        }
    }
}

include ':app'

def flutterProjectRoot = rootProject.projectDir.parentFile.toPath()

def plugins = new Properties()
def pluginsFile = new File(flutterProjectRoot.toFile(), '.flutter-plugins')
if (pluginsFile.exists()) {
    pluginsFile.withReader('UTF-8') { reader -> plugins.load(reader) }
}

plugins.each { name, path ->
    def pluginDirectory = flutterProjectRoot.resolve(path).resolve('android').toFile()
    include ":$name"
    project(":$name").projectDir = pluginDirectory
}
